# ==========================
# ===  General settings  ===
# ==========================
set -g default-terminal "rxvt-unicode-256color"  # For italics supports
set-option -ga terminal-overrides ",*256col*:Tc" # For true colors
set-option -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'  # use cursor shape same as in vim
set -g default-command "/usr/bin/zsh"
set -g history-limit 10000  # scrollback size
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
setw -g allow-rename off   # don't rename windows automatically
setw -g automatic-rename off
setw -g aggressive-resize on
set -g mouse on  # Enable mouse mode 
set -g status-interval 5
set -g focus-events on
set-option -ga update-environment ' CONDA_DEFAULT_ENV'

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# ==========================
# ===   Key bindings     ===
# ==========================

# Unbind default key bindings
unbind r
unbind %    # split-window -h
unbind '"'  # split-window
unbind [    # paste-buffer
unbind ]    
unbind o    # focus thru panes
unbind "\$" # rename-session
unbind ,    # rename-window
unbind z    # zoom-pane

# Reload config file 
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# function conda_auto_env() {
# if [ -e "environment.yml" ]; then
#   ENV_NAME=$(head -n 1 environment.yml | cut -f2 -d ' ')
#   # Check if you are already in the environment
#   if [[ $CONDA_PREFIX != *$ENV_NAME* ]]; then
#     # Try to activate environment
#     conda activate $ENV_NAME &>/dev/null
#   fi
# fi
# }

# Split panes using h and v
bind h run 'tmux split-window -h -c "#{pane_current_path}"'
bind v run 'tmux split-window -v -c "#{pane_current_path}"'

# tmux split-window "$(conda_auto_env)"

# Switch panes using Alt-{h,j,k,l} without prefix
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU (Most Recently Used) tabs
bind -r C-o swap-pane -D

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# New window and retain cwd
bind c run 'tmux new-window -c "#{pane_current_path}"'

# Zoom pane
bind + resize-pane -Z


# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Nested session toggle F12
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"


# ==============================================
# ===   Plugins     ===
# ==============================================

set -g @plugin 'tmux-plugins/tpm'  # Plugin manager

# ==============================================
# tmux-yank
set -g @plugin 'tmux-plugins/tmux-yank'  # vim-like copy to system clipboard
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default


# ==============================================
# tmux-open
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-editor 'o'


# ==============================================
# tmux-sensible - basline settings that get overwritten from .tmux.conf
# https://github.com/tmux-plugins/tmux-sensible
set -g @plugin 'tmux-plugins/tmux-sensible'

# ==============================================
# tmux-resurrect - save and reload sessions and windows after a restart
# https://github.com/tmux-plugins/tmux-resurrect
# Default keybinds : save - prefix + c + s && restore prefix + c + r
# works well with tmux-continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session' # restore Vim sessions
set -g @resurrect-strategy-nvim 'session' # restore Neovim sessions
set -g @resurrect-capture-pane-contents 'on' # restore pane contents
set -g @resurrect-processes 'ssh' # restore additional programs

# ==============================================
# tmux-continuum - automatically save and restore tmux sessions
# https://github.com/tmux-plugins/tmux-continuum
# dependency is tmux-ressurect
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on' # Restore last saved enviroment
set -g @continuum-save-interval '5' # Set autosave interval (mins)
# set -g status-right 'Continuum status: #{continuum_status}' # Show continiuum state in statusbar

# Auto install tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
